plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)
    alias(libs.plugins.kotlin.compose)
}

android {
    namespace 'com.example.mymediaplayer'
    compileSdk 34
    apply plugin: 'kotlin-kapt'
    
    // 配置使用私有平台API
    useLibrary 'org.apache.http.legacy'

    defaultConfig {
        applicationId "com.example.mymediaplayer"
        minSdk 34
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        create("release") {
            storeFile = file("${rootDir.absolutePath}/app/libs/platform.keystore")
            storePassword = "123456"  //密钥密码
            keyAlias = "swp_platform"  //key别名
            keyPassword = "123456"  //key密码
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            signingConfig = signingConfigs.getByName("release")
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig = signingConfigs.getByName("release")
        }
    }
    
    lintOptions {
        abortOnError false
        disable 'MissingPermission', 'ProtectedPermissions', 'NotificationPermission'
    }



    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
    buildFeatures {
        compose true
    }
}

// 配置使用framework.jar进行编译，解决SystemApi访问问题
allprojects {
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs.add('-Xbootclasspath/p:' + file('libs/framework.jar').absolutePath)
        }
    }
}

// 解决SystemUI MediaProjection崩溃问题的依赖配置
configurations.all {
    resolutionStrategy {
        // 强制使用兼容版本的androidx.lifecycle
        force 'androidx.lifecycle:lifecycle-runtime:2.6.2'
        force 'androidx.lifecycle:lifecycle-common:2.6.2'
        force 'androidx.lifecycle:lifecycle-process:2.6.2'
        force 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.2'
    }
}

dependencies {
    // 添加framework.jar以访问SystemApi
    compileOnly files('libs/framework.jar')
    
    implementation libs.androidx.core.ktx
    
    // 使用兼容版本的lifecycle库
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.2'
    implementation 'androidx.lifecycle:lifecycle-common:2.6.2'
    implementation 'androidx.lifecycle:lifecycle-process:2.6.2'
    
    // 添加Media相关依赖
    implementation 'androidx.media:media:1.6.0'
    implementation 'androidx.media2:media2-session:1.2.1'
    implementation 'androidx.media2:media2-widget:1.2.1'
    
    implementation libs.androidx.activity.compose
    implementation platform(libs.androidx.compose.bom)
    implementation libs.androidx.ui
    implementation libs.androidx.ui.graphics
    implementation libs.androidx.ui.tooling.preview
    implementation libs.androidx.material3
    implementation 'androidx.appcompat:appcompat:1.6.1'
    testImplementation libs.junit
    implementation 'com.github.bumptech.glide:glide:4.15.1'
    kapt 'com.github.bumptech.glide:compiler:4.15.1'
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
    androidTestImplementation platform(libs.androidx.compose.bom)
    androidTestImplementation libs.androidx.ui.test.junit4
    debugImplementation libs.androidx.ui.tooling
    debugImplementation libs.androidx.ui.test.manifest
}